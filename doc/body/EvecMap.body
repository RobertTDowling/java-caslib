package com.rtdti.calc15.cas;

import java.util.HashMap;
import java.util.Set;
import java.util.TreeSet;

public class EvecMap {
	private HashMap<String,Scalar> sm;
	private HashMap<String,Evec> em;
		sm = new HashMap<String,Scalar> ();
		em = new HashMap<String,Evec> ();
	}
	public void addTo (Scalar s, Evec e) {
		Profile.tick ("EvecMap.addTo");
		String k = e.toString();
		if (sm.containsKey (k))
			sm.put(k, s.add(sm.get(k)));
		else {
			sm.put(k, s);
			em.put(k, e);
		}
	}
	public void put (Scalar s, Evec e) {
		Profile.tick ("EvecMap.put");
		String k = e.toString();
		sm.put (k, s);
		em.put (k, e);
	}
	public Scalar get (Evec e) {
		Profile.tick ("EvecMap.get");
		String k = e.toString();
		if (sm.containsKey (k)) {
			return sm.get(k);
		}
		return new Scalar (0);
	}
	public Set<Evec> keys () {
		return sortKeys ();
	}
	public TreeSet<Evec> sortKeys () {
		Profile.tick ("EvecMap.sortKeys");
		TreeSet<Evec> t = new TreeSet<Evec>(new EvecComparer());
		for (String s: sm.keySet()) {
			t.add (em.get(s));
		}
		return t;
	}
	public void remove (Evec e) {
		String k = e.toString();
		if (sm.containsKey (k)) {
			sm.remove(k);
		}
	}
